name: Build Tenders Dashboard Executable

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'electron/package-lock.json'
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install Python dependencies
      run: |
        cd backend
        pip install -r requirements.txt
        
    - name: Install Frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Build Frontend
      run: |
        cd frontend
        npm run build
        
    - name: Install Electron dependencies
      run: |
        cd electron
        npm ci
        
    - name: Build Electron App
      run: |
        cd electron
        npm run build-win
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload Windows Executable
      uses: actions/upload-artifact@v3
      with:
        name: tenders-dashboard-windows
        path: |
          electron/dist/*.exe
          electron/dist/*.zip
        retention-days: 30
        
    - name: Upload Portable Version
      uses: actions/upload-artifact@v3
      with:
        name: tenders-dashboard-portable
        path: electron/dist/*portable*
        retention-days: 30

  release:
    needs: build-windows
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download artifacts
      uses: actions/download-artifact@v3
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          tenders-dashboard-windows/*
          tenders-dashboard-portable/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
